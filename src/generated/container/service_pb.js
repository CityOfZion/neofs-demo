/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
/* eslint-disable */
// @ts-nocheck
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var acl_types_pb = require('../acl/types_pb.js');
goog.object.extend(proto, acl_types_pb);
var container_types_pb = require('../container/types_pb.js');
goog.object.extend(proto, container_types_pb);
var refs_types_pb = require('../refs/types_pb.js');
goog.object.extend(proto, refs_types_pb);
var session_types_pb = require('../session/types_pb.js');
goog.object.extend(proto, session_types_pb);
goog.exportSymbol('proto.neo.fs.v2.container.AnnounceUsedSpaceRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.AnnounceUsedSpaceResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.DeleteRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.DeleteRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.DeleteResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.DeleteResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetExtendedACLRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetExtendedACLRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetExtendedACLResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetExtendedACLResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.GetResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.ListRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.ListRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.ListResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.ListResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.PutRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.PutRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.PutResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.PutResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.SetExtendedACLRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.SetExtendedACLRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.SetExtendedACLResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.container.SetExtendedACLResponse.Body', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.PutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.PutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.PutRequest.displayName = 'proto.neo.fs.v2.container.PutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.PutRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.PutRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.PutRequest.Body.displayName = 'proto.neo.fs.v2.container.PutRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.PutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.PutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.PutResponse.displayName = 'proto.neo.fs.v2.container.PutResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.PutResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.PutResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.PutResponse.Body.displayName = 'proto.neo.fs.v2.container.PutResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.DeleteRequest.displayName = 'proto.neo.fs.v2.container.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.DeleteRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.DeleteRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.DeleteRequest.Body.displayName = 'proto.neo.fs.v2.container.DeleteRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.DeleteResponse.displayName = 'proto.neo.fs.v2.container.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.DeleteResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.DeleteResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.DeleteResponse.Body.displayName = 'proto.neo.fs.v2.container.DeleteResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetRequest.displayName = 'proto.neo.fs.v2.container.GetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetRequest.Body.displayName = 'proto.neo.fs.v2.container.GetRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetResponse.displayName = 'proto.neo.fs.v2.container.GetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetResponse.Body.displayName = 'proto.neo.fs.v2.container.GetResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.ListRequest.displayName = 'proto.neo.fs.v2.container.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.ListRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.ListRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.ListRequest.Body.displayName = 'proto.neo.fs.v2.container.ListRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.ListResponse.displayName = 'proto.neo.fs.v2.container.ListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.ListResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.neo.fs.v2.container.ListResponse.Body.repeatedFields_, null);
};
goog.inherits(proto.neo.fs.v2.container.ListResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.ListResponse.Body.displayName = 'proto.neo.fs.v2.container.ListResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.SetExtendedACLRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.SetExtendedACLRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.SetExtendedACLRequest.displayName = 'proto.neo.fs.v2.container.SetExtendedACLRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.SetExtendedACLRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.SetExtendedACLRequest.Body.displayName = 'proto.neo.fs.v2.container.SetExtendedACLRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.SetExtendedACLResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.SetExtendedACLResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.SetExtendedACLResponse.displayName = 'proto.neo.fs.v2.container.SetExtendedACLResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.SetExtendedACLResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.SetExtendedACLResponse.Body.displayName = 'proto.neo.fs.v2.container.SetExtendedACLResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetExtendedACLRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetExtendedACLRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetExtendedACLRequest.displayName = 'proto.neo.fs.v2.container.GetExtendedACLRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetExtendedACLRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetExtendedACLRequest.Body.displayName = 'proto.neo.fs.v2.container.GetExtendedACLRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetExtendedACLResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetExtendedACLResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetExtendedACLResponse.displayName = 'proto.neo.fs.v2.container.GetExtendedACLResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.GetExtendedACLResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.GetExtendedACLResponse.Body.displayName = 'proto.neo.fs.v2.container.GetExtendedACLResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.AnnounceUsedSpaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.displayName = 'proto.neo.fs.v2.container.AnnounceUsedSpaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.repeatedFields_, null);
};
goog.inherits(proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.displayName = 'proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.displayName = 'proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.AnnounceUsedSpaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.displayName = 'proto.neo.fs.v2.container.AnnounceUsedSpaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.displayName = 'proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.PutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.PutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.PutRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.PutRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.PutRequest}
 */
proto.neo.fs.v2.container.PutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.PutRequest;
  return proto.neo.fs.v2.container.PutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.PutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.PutRequest}
 */
proto.neo.fs.v2.container.PutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.PutRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.PutRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.PutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.PutRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.PutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.PutRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.PutRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.PutRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && container_types_pb.Container.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.PutRequest.Body}
 */
proto.neo.fs.v2.container.PutRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.PutRequest.Body;
  return proto.neo.fs.v2.container.PutRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.PutRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.PutRequest.Body}
 */
proto.neo.fs.v2.container.PutRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new container_types_pb.Container;
      reader.readMessage(value,container_types_pb.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.PutRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.PutRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      container_types_pb.Container.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.neo.fs.v2.container.Container}
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.getContainer = function() {
  return /** @type{?proto.neo.fs.v2.container.Container} */ (
    jspb.Message.getWrapperField(this, container_types_pb.Container, 1));
};


/** @param {?proto.neo.fs.v2.container.Container|undefined} value */
proto.neo.fs.v2.container.PutRequest.Body.prototype.setContainer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.clearContainer = function() {
  this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.container.PutRequest.Body.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutRequest.Body.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.PutRequest.Body}
 */
proto.neo.fs.v2.container.PutRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.PutRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.PutRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.PutRequest.Body|undefined} value */
proto.neo.fs.v2.container.PutRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.container.PutRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.container.PutRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.container.PutRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.container.PutRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.PutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.PutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.PutResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.PutResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.PutResponse}
 */
proto.neo.fs.v2.container.PutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.PutResponse;
  return proto.neo.fs.v2.container.PutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.PutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.PutResponse}
 */
proto.neo.fs.v2.container.PutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.PutResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.PutResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.PutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.PutResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.PutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.PutResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.PutResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.PutResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.PutResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: (f = msg.getContainerId()) && refs_types_pb.ContainerID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.PutResponse.Body}
 */
proto.neo.fs.v2.container.PutResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.PutResponse.Body;
  return proto.neo.fs.v2.container.PutResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.PutResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.PutResponse.Body}
 */
proto.neo.fs.v2.container.PutResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ContainerID;
      reader.readMessage(value,refs_types_pb.ContainerID.deserializeBinaryFromReader);
      msg.setContainerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.PutResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.PutResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.PutResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.PutResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ContainerID.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.ContainerID container_id = 1;
 * @return {?proto.neo.fs.v2.refs.ContainerID}
 */
proto.neo.fs.v2.container.PutResponse.Body.prototype.getContainerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ContainerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ContainerID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ContainerID|undefined} value */
proto.neo.fs.v2.container.PutResponse.Body.prototype.setContainerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutResponse.Body.prototype.clearContainerId = function() {
  this.setContainerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutResponse.Body.prototype.hasContainerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.PutResponse.Body}
 */
proto.neo.fs.v2.container.PutResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.PutResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.PutResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.PutResponse.Body|undefined} value */
proto.neo.fs.v2.container.PutResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.container.PutResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.container.PutResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.container.PutResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.container.PutResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.PutResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.PutResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.DeleteRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.DeleteRequest}
 */
proto.neo.fs.v2.container.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.DeleteRequest;
  return proto.neo.fs.v2.container.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.DeleteRequest}
 */
proto.neo.fs.v2.container.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.DeleteRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.DeleteRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.DeleteRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.DeleteRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.DeleteRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: (f = msg.getContainerId()) && refs_types_pb.ContainerID.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.DeleteRequest.Body}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.DeleteRequest.Body;
  return proto.neo.fs.v2.container.DeleteRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.DeleteRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.DeleteRequest.Body}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ContainerID;
      reader.readMessage(value,refs_types_pb.ContainerID.deserializeBinaryFromReader);
      msg.setContainerId(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.DeleteRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.DeleteRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ContainerID.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.ContainerID container_id = 1;
 * @return {?proto.neo.fs.v2.refs.ContainerID}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.getContainerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ContainerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ContainerID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ContainerID|undefined} value */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.setContainerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.clearContainerId = function() {
  this.setContainerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.hasContainerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteRequest.Body.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.DeleteRequest.Body}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.DeleteRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.DeleteRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.DeleteRequest.Body|undefined} value */
proto.neo.fs.v2.container.DeleteRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.container.DeleteRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.container.DeleteRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.DeleteResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.DeleteResponse}
 */
proto.neo.fs.v2.container.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.DeleteResponse;
  return proto.neo.fs.v2.container.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.DeleteResponse}
 */
proto.neo.fs.v2.container.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.DeleteResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.DeleteResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.DeleteResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.DeleteResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.DeleteResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.DeleteResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.DeleteResponse.Body}
 */
proto.neo.fs.v2.container.DeleteResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.DeleteResponse.Body;
  return proto.neo.fs.v2.container.DeleteResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.DeleteResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.DeleteResponse.Body}
 */
proto.neo.fs.v2.container.DeleteResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.DeleteResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.DeleteResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.DeleteResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.DeleteResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.DeleteResponse.Body}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.DeleteResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.DeleteResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.DeleteResponse.Body|undefined} value */
proto.neo.fs.v2.container.DeleteResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.container.DeleteResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.container.DeleteResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.DeleteResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.GetRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetRequest}
 */
proto.neo.fs.v2.container.GetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetRequest;
  return proto.neo.fs.v2.container.GetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetRequest}
 */
proto.neo.fs.v2.container.GetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.GetRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.GetRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.GetRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: (f = msg.getContainerId()) && refs_types_pb.ContainerID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetRequest.Body}
 */
proto.neo.fs.v2.container.GetRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetRequest.Body;
  return proto.neo.fs.v2.container.GetRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetRequest.Body}
 */
proto.neo.fs.v2.container.GetRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ContainerID;
      reader.readMessage(value,refs_types_pb.ContainerID.deserializeBinaryFromReader);
      msg.setContainerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ContainerID.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.ContainerID container_id = 1;
 * @return {?proto.neo.fs.v2.refs.ContainerID}
 */
proto.neo.fs.v2.container.GetRequest.Body.prototype.getContainerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ContainerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ContainerID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ContainerID|undefined} value */
proto.neo.fs.v2.container.GetRequest.Body.prototype.setContainerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetRequest.Body.prototype.clearContainerId = function() {
  this.setContainerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetRequest.Body.prototype.hasContainerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.GetRequest.Body}
 */
proto.neo.fs.v2.container.GetRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.GetRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.GetRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.GetRequest.Body|undefined} value */
proto.neo.fs.v2.container.GetRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.container.GetRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.container.GetRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.container.GetRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.container.GetRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.GetResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetResponse}
 */
proto.neo.fs.v2.container.GetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetResponse;
  return proto.neo.fs.v2.container.GetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetResponse}
 */
proto.neo.fs.v2.container.GetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.GetResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.GetResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.GetResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    container: (f = msg.getContainer()) && container_types_pb.Container.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f),
    sessionToken: (f = msg.getSessionToken()) && session_types_pb.SessionToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetResponse.Body}
 */
proto.neo.fs.v2.container.GetResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetResponse.Body;
  return proto.neo.fs.v2.container.GetResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetResponse.Body}
 */
proto.neo.fs.v2.container.GetResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new container_types_pb.Container;
      reader.readMessage(value,container_types_pb.Container.deserializeBinaryFromReader);
      msg.setContainer(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    case 3:
      var value = new session_types_pb.SessionToken;
      reader.readMessage(value,session_types_pb.SessionToken.deserializeBinaryFromReader);
      msg.setSessionToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      container_types_pb.Container.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getSessionToken();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.SessionToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional Container container = 1;
 * @return {?proto.neo.fs.v2.container.Container}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.getContainer = function() {
  return /** @type{?proto.neo.fs.v2.container.Container} */ (
    jspb.Message.getWrapperField(this, container_types_pb.Container, 1));
};


/** @param {?proto.neo.fs.v2.container.Container|undefined} value */
proto.neo.fs.v2.container.GetResponse.Body.prototype.setContainer = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.clearContainer = function() {
  this.setContainer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.hasContainer = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.container.GetResponse.Body.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.SessionToken session_token = 3;
 * @return {?proto.neo.fs.v2.session.SessionToken}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.getSessionToken = function() {
  return /** @type{?proto.neo.fs.v2.session.SessionToken} */ (
    jspb.Message.getWrapperField(this, session_types_pb.SessionToken, 3));
};


/** @param {?proto.neo.fs.v2.session.SessionToken|undefined} value */
proto.neo.fs.v2.container.GetResponse.Body.prototype.setSessionToken = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.clearSessionToken = function() {
  this.setSessionToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetResponse.Body.prototype.hasSessionToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.GetResponse.Body}
 */
proto.neo.fs.v2.container.GetResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.GetResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.GetResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.GetResponse.Body|undefined} value */
proto.neo.fs.v2.container.GetResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.container.GetResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.container.GetResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.container.GetResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.container.GetResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.ListRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.ListRequest}
 */
proto.neo.fs.v2.container.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.ListRequest;
  return proto.neo.fs.v2.container.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.ListRequest}
 */
proto.neo.fs.v2.container.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.ListRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.ListRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.ListRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.ListRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.ListRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.ListRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerId: (f = msg.getOwnerId()) && refs_types_pb.OwnerID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.ListRequest.Body}
 */
proto.neo.fs.v2.container.ListRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.ListRequest.Body;
  return proto.neo.fs.v2.container.ListRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.ListRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.ListRequest.Body}
 */
proto.neo.fs.v2.container.ListRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.OwnerID;
      reader.readMessage(value,refs_types_pb.OwnerID.deserializeBinaryFromReader);
      msg.setOwnerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.ListRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.ListRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.ListRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.OwnerID.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.OwnerID owner_id = 1;
 * @return {?proto.neo.fs.v2.refs.OwnerID}
 */
proto.neo.fs.v2.container.ListRequest.Body.prototype.getOwnerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.OwnerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.OwnerID, 1));
};


/** @param {?proto.neo.fs.v2.refs.OwnerID|undefined} value */
proto.neo.fs.v2.container.ListRequest.Body.prototype.setOwnerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.ListRequest.Body.prototype.clearOwnerId = function() {
  this.setOwnerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.ListRequest.Body.prototype.hasOwnerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.ListRequest.Body}
 */
proto.neo.fs.v2.container.ListRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.ListRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.ListRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.ListRequest.Body|undefined} value */
proto.neo.fs.v2.container.ListRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.ListRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.ListRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.container.ListRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.container.ListRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.ListRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.ListRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.container.ListRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.container.ListRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.ListRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.ListRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.ListResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.ListResponse}
 */
proto.neo.fs.v2.container.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.ListResponse;
  return proto.neo.fs.v2.container.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.ListResponse}
 */
proto.neo.fs.v2.container.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.ListResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.ListResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.ListResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.neo.fs.v2.container.ListResponse.Body.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.ListResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.ListResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.ListResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerIdsList: jspb.Message.toObjectList(msg.getContainerIdsList(),
    refs_types_pb.ContainerID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.ListResponse.Body}
 */
proto.neo.fs.v2.container.ListResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.ListResponse.Body;
  return proto.neo.fs.v2.container.ListResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.ListResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.ListResponse.Body}
 */
proto.neo.fs.v2.container.ListResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ContainerID;
      reader.readMessage(value,refs_types_pb.ContainerID.deserializeBinaryFromReader);
      msg.addContainerIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.ListResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.ListResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.ListResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.ListResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerIdsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      refs_types_pb.ContainerID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated neo.fs.v2.refs.ContainerID container_ids = 1;
 * @return {!Array<!proto.neo.fs.v2.refs.ContainerID>}
 */
proto.neo.fs.v2.container.ListResponse.Body.prototype.getContainerIdsList = function() {
  return /** @type{!Array<!proto.neo.fs.v2.refs.ContainerID>} */ (
    jspb.Message.getRepeatedWrapperField(this, refs_types_pb.ContainerID, 1));
};


/** @param {!Array<!proto.neo.fs.v2.refs.ContainerID>} value */
proto.neo.fs.v2.container.ListResponse.Body.prototype.setContainerIdsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.neo.fs.v2.refs.ContainerID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.neo.fs.v2.refs.ContainerID}
 */
proto.neo.fs.v2.container.ListResponse.Body.prototype.addContainerIds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.neo.fs.v2.refs.ContainerID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neo.fs.v2.container.ListResponse.Body.prototype.clearContainerIdsList = function() {
  this.setContainerIdsList([]);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.ListResponse.Body}
 */
proto.neo.fs.v2.container.ListResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.ListResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.ListResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.ListResponse.Body|undefined} value */
proto.neo.fs.v2.container.ListResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.ListResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.ListResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.container.ListResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.container.ListResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.ListResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.ListResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.container.ListResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.container.ListResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.ListResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.ListResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.SetExtendedACLRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.SetExtendedACLRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.SetExtendedACLRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLRequest}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.SetExtendedACLRequest;
  return proto.neo.fs.v2.container.SetExtendedACLRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLRequest}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.SetExtendedACLRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.SetExtendedACLRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.SetExtendedACLRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.SetExtendedACLRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.SetExtendedACLRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.SetExtendedACLRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    eacl: (f = msg.getEacl()) && acl_types_pb.EACLTable.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLRequest.Body}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.SetExtendedACLRequest.Body;
  return proto.neo.fs.v2.container.SetExtendedACLRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLRequest.Body}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new acl_types_pb.EACLTable;
      reader.readMessage(value,acl_types_pb.EACLTable.deserializeBinaryFromReader);
      msg.setEacl(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.SetExtendedACLRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEacl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      acl_types_pb.EACLTable.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.acl.EACLTable eacl = 1;
 * @return {?proto.neo.fs.v2.acl.EACLTable}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.getEacl = function() {
  return /** @type{?proto.neo.fs.v2.acl.EACLTable} */ (
    jspb.Message.getWrapperField(this, acl_types_pb.EACLTable, 1));
};


/** @param {?proto.neo.fs.v2.acl.EACLTable|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.setEacl = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.clearEacl = function() {
  this.setEacl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.hasEacl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.Body.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.SetExtendedACLRequest.Body}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.SetExtendedACLRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.SetExtendedACLRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.SetExtendedACLRequest.Body|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.SetExtendedACLResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.SetExtendedACLResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.SetExtendedACLResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLResponse}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.SetExtendedACLResponse;
  return proto.neo.fs.v2.container.SetExtendedACLResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLResponse}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.SetExtendedACLResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.SetExtendedACLResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.SetExtendedACLResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.SetExtendedACLResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.SetExtendedACLResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.SetExtendedACLResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLResponse.Body}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.SetExtendedACLResponse.Body;
  return proto.neo.fs.v2.container.SetExtendedACLResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.SetExtendedACLResponse.Body}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.SetExtendedACLResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.SetExtendedACLResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.SetExtendedACLResponse.Body}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.SetExtendedACLResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.SetExtendedACLResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.SetExtendedACLResponse.Body|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.SetExtendedACLResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetExtendedACLRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetExtendedACLRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.GetExtendedACLRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLRequest}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetExtendedACLRequest;
  return proto.neo.fs.v2.container.GetExtendedACLRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLRequest}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.GetExtendedACLRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.GetExtendedACLRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetExtendedACLRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.GetExtendedACLRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetExtendedACLRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetExtendedACLRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: (f = msg.getContainerId()) && refs_types_pb.ContainerID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLRequest.Body}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetExtendedACLRequest.Body;
  return proto.neo.fs.v2.container.GetExtendedACLRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLRequest.Body}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ContainerID;
      reader.readMessage(value,refs_types_pb.ContainerID.deserializeBinaryFromReader);
      msg.setContainerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetExtendedACLRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ContainerID.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.ContainerID container_id = 1;
 * @return {?proto.neo.fs.v2.refs.ContainerID}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.prototype.getContainerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ContainerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ContainerID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ContainerID|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.prototype.setContainerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.prototype.clearContainerId = function() {
  this.setContainerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.Body.prototype.hasContainerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.GetExtendedACLRequest.Body}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.GetExtendedACLRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.GetExtendedACLRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.GetExtendedACLRequest.Body|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetExtendedACLResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetExtendedACLResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.GetExtendedACLResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLResponse}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetExtendedACLResponse;
  return proto.neo.fs.v2.container.GetExtendedACLResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLResponse}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.GetExtendedACLResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.GetExtendedACLResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetExtendedACLResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.GetExtendedACLResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.GetExtendedACLResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.GetExtendedACLResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    eacl: (f = msg.getEacl()) && acl_types_pb.EACLTable.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f),
    sessionToken: (f = msg.getSessionToken()) && session_types_pb.SessionToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLResponse.Body}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.GetExtendedACLResponse.Body;
  return proto.neo.fs.v2.container.GetExtendedACLResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.GetExtendedACLResponse.Body}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new acl_types_pb.EACLTable;
      reader.readMessage(value,acl_types_pb.EACLTable.deserializeBinaryFromReader);
      msg.setEacl(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    case 3:
      var value = new session_types_pb.SessionToken;
      reader.readMessage(value,session_types_pb.SessionToken.deserializeBinaryFromReader);
      msg.setSessionToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.GetExtendedACLResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.GetExtendedACLResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEacl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      acl_types_pb.EACLTable.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getSessionToken();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.SessionToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.acl.EACLTable eacl = 1;
 * @return {?proto.neo.fs.v2.acl.EACLTable}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.getEacl = function() {
  return /** @type{?proto.neo.fs.v2.acl.EACLTable} */ (
    jspb.Message.getWrapperField(this, acl_types_pb.EACLTable, 1));
};


/** @param {?proto.neo.fs.v2.acl.EACLTable|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.setEacl = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.clearEacl = function() {
  this.setEacl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.hasEacl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.SessionToken session_token = 3;
 * @return {?proto.neo.fs.v2.session.SessionToken}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.getSessionToken = function() {
  return /** @type{?proto.neo.fs.v2.session.SessionToken} */ (
    jspb.Message.getWrapperField(this, session_types_pb.SessionToken, 3));
};


/** @param {?proto.neo.fs.v2.session.SessionToken|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.setSessionToken = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.clearSessionToken = function() {
  this.setSessionToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.Body.prototype.hasSessionToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.GetExtendedACLResponse.Body}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.GetExtendedACLResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.GetExtendedACLResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.GetExtendedACLResponse.Body|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.GetExtendedACLResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.AnnounceUsedSpaceRequest;
  return proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    announcementsList: jspb.Message.toObjectList(msg.getAnnouncementsList(),
    proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body;
  return proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement;
      reader.readMessage(value,proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.deserializeBinaryFromReader);
      msg.addAnnouncements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnnouncementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.toObject = function(includeInstance, msg) {
  var f, obj = {
    epoch: jspb.Message.getFieldWithDefault(msg, 1, 0),
    containerId: (f = msg.getContainerId()) && refs_types_pb.ContainerID.toObject(includeInstance, f),
    usedSpace: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement;
  return proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEpoch(value);
      break;
    case 2:
      var value = new refs_types_pb.ContainerID;
      reader.readMessage(value,refs_types_pb.ContainerID.deserializeBinaryFromReader);
      msg.setContainerId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUsedSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEpoch();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getContainerId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.ContainerID.serializeBinaryToWriter
    );
  }
  f = message.getUsedSpace();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 epoch = 1;
 * @return {number}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.getEpoch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.setEpoch = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional neo.fs.v2.refs.ContainerID container_id = 2;
 * @return {?proto.neo.fs.v2.refs.ContainerID}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.getContainerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ContainerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ContainerID, 2));
};


/** @param {?proto.neo.fs.v2.refs.ContainerID|undefined} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.setContainerId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.clearContainerId = function() {
  this.setContainerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.hasContainerId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 used_space = 3;
 * @return {number}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.getUsedSpace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement.prototype.setUsedSpace = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Announcement announcements = 1;
 * @return {!Array<!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement>}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.prototype.getAnnouncementsList = function() {
  return /** @type{!Array<!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement, 1));
};


/** @param {!Array<!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement>} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.prototype.setAnnouncementsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.prototype.addAnnouncements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.Announcement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body.prototype.clearAnnouncementsList = function() {
  this.setAnnouncementsList([]);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.Body|undefined} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.AnnounceUsedSpaceResponse;
  return proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body;
  return proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.Body|undefined} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.container.AnnounceUsedSpaceResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.neo.fs.v2.container);
