/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
/* eslint-disable */
// @ts-nocheck
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var accounting_types_pb = require('../accounting/types_pb.js');
goog.object.extend(proto, accounting_types_pb);
var refs_types_pb = require('../refs/types_pb.js');
goog.object.extend(proto, refs_types_pb);
var session_types_pb = require('../session/types_pb.js');
goog.object.extend(proto, session_types_pb);
goog.exportSymbol('proto.neo.fs.v2.accounting.BalanceRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.accounting.BalanceRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.accounting.BalanceResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.accounting.BalanceResponse.Body', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.accounting.BalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.accounting.BalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.accounting.BalanceRequest.displayName = 'proto.neo.fs.v2.accounting.BalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.accounting.BalanceRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.accounting.BalanceRequest.Body.displayName = 'proto.neo.fs.v2.accounting.BalanceRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.accounting.BalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.accounting.BalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.accounting.BalanceResponse.displayName = 'proto.neo.fs.v2.accounting.BalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.accounting.BalanceResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.accounting.BalanceResponse.Body.displayName = 'proto.neo.fs.v2.accounting.BalanceResponse.Body';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.accounting.BalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.accounting.BalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.accounting.BalanceRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.accounting.BalanceRequest}
 */
proto.neo.fs.v2.accounting.BalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.accounting.BalanceRequest;
  return proto.neo.fs.v2.accounting.BalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.accounting.BalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.accounting.BalanceRequest}
 */
proto.neo.fs.v2.accounting.BalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.accounting.BalanceRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.accounting.BalanceRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.accounting.BalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.accounting.BalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.accounting.BalanceRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.accounting.BalanceRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.accounting.BalanceRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerId: (f = msg.getOwnerId()) && refs_types_pb.OwnerID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.accounting.BalanceRequest.Body}
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.accounting.BalanceRequest.Body;
  return proto.neo.fs.v2.accounting.BalanceRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.accounting.BalanceRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.accounting.BalanceRequest.Body}
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.OwnerID;
      reader.readMessage(value,refs_types_pb.OwnerID.deserializeBinaryFromReader);
      msg.setOwnerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.accounting.BalanceRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.accounting.BalanceRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.OwnerID.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.OwnerID owner_id = 1;
 * @return {?proto.neo.fs.v2.refs.OwnerID}
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.prototype.getOwnerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.OwnerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.OwnerID, 1));
};


/** @param {?proto.neo.fs.v2.refs.OwnerID|undefined} value */
proto.neo.fs.v2.accounting.BalanceRequest.Body.prototype.setOwnerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.prototype.clearOwnerId = function() {
  this.setOwnerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceRequest.Body.prototype.hasOwnerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.accounting.BalanceRequest.Body}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.accounting.BalanceRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.accounting.BalanceRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.accounting.BalanceRequest.Body|undefined} value */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.accounting.BalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.accounting.BalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.accounting.BalanceResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.accounting.BalanceResponse}
 */
proto.neo.fs.v2.accounting.BalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.accounting.BalanceResponse;
  return proto.neo.fs.v2.accounting.BalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.accounting.BalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.accounting.BalanceResponse}
 */
proto.neo.fs.v2.accounting.BalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.accounting.BalanceResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.accounting.BalanceResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.accounting.BalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.accounting.BalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.accounting.BalanceResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.accounting.BalanceResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.accounting.BalanceResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: (f = msg.getBalance()) && accounting_types_pb.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.accounting.BalanceResponse.Body}
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.accounting.BalanceResponse.Body;
  return proto.neo.fs.v2.accounting.BalanceResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.accounting.BalanceResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.accounting.BalanceResponse.Body}
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new accounting_types_pb.Decimal;
      reader.readMessage(value,accounting_types_pb.Decimal.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.accounting.BalanceResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.accounting.BalanceResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      accounting_types_pb.Decimal.serializeBinaryToWriter
    );
  }
};


/**
 * optional Decimal balance = 1;
 * @return {?proto.neo.fs.v2.accounting.Decimal}
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.prototype.getBalance = function() {
  return /** @type{?proto.neo.fs.v2.accounting.Decimal} */ (
    jspb.Message.getWrapperField(this, accounting_types_pb.Decimal, 1));
};


/** @param {?proto.neo.fs.v2.accounting.Decimal|undefined} value */
proto.neo.fs.v2.accounting.BalanceResponse.Body.prototype.setBalance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.prototype.clearBalance = function() {
  this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceResponse.Body.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.accounting.BalanceResponse.Body}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.accounting.BalanceResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.accounting.BalanceResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.accounting.BalanceResponse.Body|undefined} value */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.accounting.BalanceResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.neo.fs.v2.accounting);
