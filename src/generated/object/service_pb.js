/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var object_types_pb = require('../object/types_pb.js');
goog.object.extend(proto, object_types_pb);
var refs_types_pb = require('../refs/types_pb.js');
goog.object.extend(proto, refs_types_pb);
var session_types_pb = require('../session/types_pb.js');
goog.object.extend(proto, session_types_pb);
goog.exportSymbol('proto.neo.fs.v2.object.DeleteRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.DeleteRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.DeleteResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.DeleteResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeHashRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeHashRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeHashResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeHashResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRangeResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.GetResponse.Body.Init', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.HeadRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.HeadRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.HeadResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.HeadResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.HeaderWithSignature', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.PutRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.PutRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.PutRequest.Body.Init', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.PutResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.PutResponse.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.Range', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.SearchRequest', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.SearchRequest.Body', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.SearchRequest.Body.Filter', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.SearchResponse', null, global);
goog.exportSymbol('proto.neo.fs.v2.object.SearchResponse.Body', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRequest.displayName = 'proto.neo.fs.v2.object.GetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRequest.Body.displayName = 'proto.neo.fs.v2.object.GetRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetResponse.displayName = 'proto.neo.fs.v2.object.GetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.neo.fs.v2.object.GetResponse.Body.oneofGroups_);
};
goog.inherits(proto.neo.fs.v2.object.GetResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetResponse.Body.displayName = 'proto.neo.fs.v2.object.GetResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetResponse.Body.Init = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetResponse.Body.Init, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetResponse.Body.Init.displayName = 'proto.neo.fs.v2.object.GetResponse.Body.Init';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.PutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.PutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.PutRequest.displayName = 'proto.neo.fs.v2.object.PutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.PutRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.neo.fs.v2.object.PutRequest.Body.oneofGroups_);
};
goog.inherits(proto.neo.fs.v2.object.PutRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.PutRequest.Body.displayName = 'proto.neo.fs.v2.object.PutRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.PutRequest.Body.Init = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.PutRequest.Body.Init, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.PutRequest.Body.Init.displayName = 'proto.neo.fs.v2.object.PutRequest.Body.Init';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.PutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.PutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.PutResponse.displayName = 'proto.neo.fs.v2.object.PutResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.PutResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.PutResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.PutResponse.Body.displayName = 'proto.neo.fs.v2.object.PutResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.DeleteRequest.displayName = 'proto.neo.fs.v2.object.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.DeleteRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.DeleteRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.DeleteRequest.Body.displayName = 'proto.neo.fs.v2.object.DeleteRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.DeleteResponse.displayName = 'proto.neo.fs.v2.object.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.DeleteResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.DeleteResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.DeleteResponse.Body.displayName = 'proto.neo.fs.v2.object.DeleteResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.HeadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.HeadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.HeadRequest.displayName = 'proto.neo.fs.v2.object.HeadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.HeadRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.HeadRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.HeadRequest.Body.displayName = 'proto.neo.fs.v2.object.HeadRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.HeaderWithSignature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.HeaderWithSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.HeaderWithSignature.displayName = 'proto.neo.fs.v2.object.HeaderWithSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.HeadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.HeadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.HeadResponse.displayName = 'proto.neo.fs.v2.object.HeadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.HeadResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.neo.fs.v2.object.HeadResponse.Body.oneofGroups_);
};
goog.inherits(proto.neo.fs.v2.object.HeadResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.HeadResponse.Body.displayName = 'proto.neo.fs.v2.object.HeadResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.SearchRequest.displayName = 'proto.neo.fs.v2.object.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.SearchRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.neo.fs.v2.object.SearchRequest.Body.repeatedFields_, null);
};
goog.inherits(proto.neo.fs.v2.object.SearchRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.SearchRequest.Body.displayName = 'proto.neo.fs.v2.object.SearchRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.SearchRequest.Body.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.SearchRequest.Body.Filter.displayName = 'proto.neo.fs.v2.object.SearchRequest.Body.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.SearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.SearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.SearchResponse.displayName = 'proto.neo.fs.v2.object.SearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.SearchResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.neo.fs.v2.object.SearchResponse.Body.repeatedFields_, null);
};
goog.inherits(proto.neo.fs.v2.object.SearchResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.SearchResponse.Body.displayName = 'proto.neo.fs.v2.object.SearchResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.Range.displayName = 'proto.neo.fs.v2.object.Range';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeRequest.displayName = 'proto.neo.fs.v2.object.GetRangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeRequest.Body.displayName = 'proto.neo.fs.v2.object.GetRangeRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeResponse.displayName = 'proto.neo.fs.v2.object.GetRangeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.neo.fs.v2.object.GetRangeResponse.Body.oneofGroups_);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeResponse.Body.displayName = 'proto.neo.fs.v2.object.GetRangeResponse.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeHashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeHashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeHashRequest.displayName = 'proto.neo.fs.v2.object.GetRangeHashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.neo.fs.v2.object.GetRangeHashRequest.Body.repeatedFields_, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeHashRequest.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeHashRequest.Body.displayName = 'proto.neo.fs.v2.object.GetRangeHashRequest.Body';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeHashResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeHashResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeHashResponse.displayName = 'proto.neo.fs.v2.object.GetRangeHashResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.neo.fs.v2.object.GetRangeHashResponse.Body.repeatedFields_, null);
};
goog.inherits(proto.neo.fs.v2.object.GetRangeHashResponse.Body, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neo.fs.v2.object.GetRangeHashResponse.Body.displayName = 'proto.neo.fs.v2.object.GetRangeHashResponse.Body';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.GetRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRequest}
 */
proto.neo.fs.v2.object.GetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRequest;
  return proto.neo.fs.v2.object.GetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRequest}
 */
proto.neo.fs.v2.object.GetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.GetRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.GetRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.GetRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && refs_types_pb.Address.toObject(includeInstance, f),
    raw: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRequest.Body}
 */
proto.neo.fs.v2.object.GetRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRequest.Body;
  return proto.neo.fs.v2.object.GetRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRequest.Body}
 */
proto.neo.fs.v2.object.GetRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.Address;
      reader.readMessage(value,refs_types_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getRaw();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional neo.fs.v2.refs.Address address = 1;
 * @return {?proto.neo.fs.v2.refs.Address}
 */
proto.neo.fs.v2.object.GetRequest.Body.prototype.getAddress = function() {
  return /** @type{?proto.neo.fs.v2.refs.Address} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Address, 1));
};


/** @param {?proto.neo.fs.v2.refs.Address|undefined} value */
proto.neo.fs.v2.object.GetRequest.Body.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRequest.Body.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRequest.Body.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool raw = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRequest.Body.prototype.getRaw = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.neo.fs.v2.object.GetRequest.Body.prototype.setRaw = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.GetRequest.Body}
 */
proto.neo.fs.v2.object.GetRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.GetRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.GetRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.GetRequest.Body|undefined} value */
proto.neo.fs.v2.object.GetRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.object.GetRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.object.GetRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.object.GetRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.object.GetRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.GetResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetResponse}
 */
proto.neo.fs.v2.object.GetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetResponse;
  return proto.neo.fs.v2.object.GetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetResponse}
 */
proto.neo.fs.v2.object.GetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.GetResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.GetResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.GetResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.neo.fs.v2.object.GetResponse.Body.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.neo.fs.v2.object.GetResponse.Body.ObjectPartCase = {
  OBJECT_PART_NOT_SET: 0,
  INIT: 1,
  CHUNK: 2,
  SPLIT_INFO: 3
};

/**
 * @return {proto.neo.fs.v2.object.GetResponse.Body.ObjectPartCase}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.getObjectPartCase = function() {
  return /** @type {proto.neo.fs.v2.object.GetResponse.Body.ObjectPartCase} */(jspb.Message.computeOneofCase(this, proto.neo.fs.v2.object.GetResponse.Body.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: (f = msg.getInit()) && proto.neo.fs.v2.object.GetResponse.Body.Init.toObject(includeInstance, f),
    chunk: msg.getChunk_asB64(),
    splitInfo: (f = msg.getSplitInfo()) && object_types_pb.SplitInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetResponse.Body}
 */
proto.neo.fs.v2.object.GetResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetResponse.Body;
  return proto.neo.fs.v2.object.GetResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetResponse.Body}
 */
proto.neo.fs.v2.object.GetResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.GetResponse.Body.Init;
      reader.readMessage(value,proto.neo.fs.v2.object.GetResponse.Body.Init.deserializeBinaryFromReader);
      msg.setInit(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChunk(value);
      break;
    case 3:
      var value = new object_types_pb.SplitInfo;
      reader.readMessage(value,object_types_pb.SplitInfo.deserializeBinaryFromReader);
      msg.setSplitInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.GetResponse.Body.Init.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSplitInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      object_types_pb.SplitInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetResponse.Body.Init.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetResponse.Body.Init} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectId: (f = msg.getObjectId()) && refs_types_pb.ObjectID.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f),
    header: (f = msg.getHeader()) && object_types_pb.Header.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetResponse.Body.Init}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetResponse.Body.Init;
  return proto.neo.fs.v2.object.GetResponse.Body.Init.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetResponse.Body.Init} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetResponse.Body.Init}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ObjectID;
      reader.readMessage(value,refs_types_pb.ObjectID.deserializeBinaryFromReader);
      msg.setObjectId(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    case 3:
      var value = new object_types_pb.Header;
      reader.readMessage(value,object_types_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetResponse.Body.Init.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetResponse.Body.Init} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ObjectID.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      object_types_pb.Header.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.ObjectID object_id = 1;
 * @return {?proto.neo.fs.v2.refs.ObjectID}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.getObjectId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ObjectID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ObjectID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ObjectID|undefined} value */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.setObjectId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.clearObjectId = function() {
  this.setObjectId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.hasObjectId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Header header = 3;
 * @return {?proto.neo.fs.v2.object.Header}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.getHeader = function() {
  return /** @type{?proto.neo.fs.v2.object.Header} */ (
    jspb.Message.getWrapperField(this, object_types_pb.Header, 3));
};


/** @param {?proto.neo.fs.v2.object.Header|undefined} value */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.Body.Init.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Init init = 1;
 * @return {?proto.neo.fs.v2.object.GetResponse.Body.Init}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.getInit = function() {
  return /** @type{?proto.neo.fs.v2.object.GetResponse.Body.Init} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.GetResponse.Body.Init, 1));
};


/** @param {?proto.neo.fs.v2.object.GetResponse.Body.Init|undefined} value */
proto.neo.fs.v2.object.GetResponse.Body.prototype.setInit = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.neo.fs.v2.object.GetResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.clearInit = function() {
  this.setInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.hasInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes chunk = 2;
 * @return {!(string|Uint8Array)}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.getChunk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes chunk = 2;
 * This is a type-conversion wrapper around `getChunk()`
 * @return {string}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.getChunk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChunk()));
};


/**
 * optional bytes chunk = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChunk()`
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.getChunk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChunk()));
};


/** @param {!(string|Uint8Array)} value */
proto.neo.fs.v2.object.GetResponse.Body.prototype.setChunk = function(value) {
  jspb.Message.setOneofField(this, 2, proto.neo.fs.v2.object.GetResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.clearChunk = function() {
  jspb.Message.setOneofField(this, 2, proto.neo.fs.v2.object.GetResponse.Body.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.hasChunk = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SplitInfo split_info = 3;
 * @return {?proto.neo.fs.v2.object.SplitInfo}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.getSplitInfo = function() {
  return /** @type{?proto.neo.fs.v2.object.SplitInfo} */ (
    jspb.Message.getWrapperField(this, object_types_pb.SplitInfo, 3));
};


/** @param {?proto.neo.fs.v2.object.SplitInfo|undefined} value */
proto.neo.fs.v2.object.GetResponse.Body.prototype.setSplitInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.neo.fs.v2.object.GetResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.clearSplitInfo = function() {
  this.setSplitInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.Body.prototype.hasSplitInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.GetResponse.Body}
 */
proto.neo.fs.v2.object.GetResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.GetResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.GetResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.GetResponse.Body|undefined} value */
proto.neo.fs.v2.object.GetResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.object.GetResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.object.GetResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.object.GetResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.object.GetResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.PutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.PutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.PutRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.PutRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.PutRequest}
 */
proto.neo.fs.v2.object.PutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.PutRequest;
  return proto.neo.fs.v2.object.PutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.PutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.PutRequest}
 */
proto.neo.fs.v2.object.PutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.PutRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.PutRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.PutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.PutRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.PutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.PutRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.neo.fs.v2.object.PutRequest.Body.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.neo.fs.v2.object.PutRequest.Body.ObjectPartCase = {
  OBJECT_PART_NOT_SET: 0,
  INIT: 1,
  CHUNK: 2
};

/**
 * @return {proto.neo.fs.v2.object.PutRequest.Body.ObjectPartCase}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.getObjectPartCase = function() {
  return /** @type {proto.neo.fs.v2.object.PutRequest.Body.ObjectPartCase} */(jspb.Message.computeOneofCase(this, proto.neo.fs.v2.object.PutRequest.Body.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.PutRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.PutRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: (f = msg.getInit()) && proto.neo.fs.v2.object.PutRequest.Body.Init.toObject(includeInstance, f),
    chunk: msg.getChunk_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.PutRequest.Body}
 */
proto.neo.fs.v2.object.PutRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.PutRequest.Body;
  return proto.neo.fs.v2.object.PutRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.PutRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.PutRequest.Body}
 */
proto.neo.fs.v2.object.PutRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.PutRequest.Body.Init;
      reader.readMessage(value,proto.neo.fs.v2.object.PutRequest.Body.Init.deserializeBinaryFromReader);
      msg.setInit(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChunk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.PutRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.PutRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.PutRequest.Body.Init.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.PutRequest.Body.Init.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.PutRequest.Body.Init} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectId: (f = msg.getObjectId()) && refs_types_pb.ObjectID.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f),
    header: (f = msg.getHeader()) && object_types_pb.Header.toObject(includeInstance, f),
    copiesNumber: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.PutRequest.Body.Init}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.PutRequest.Body.Init;
  return proto.neo.fs.v2.object.PutRequest.Body.Init.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.PutRequest.Body.Init} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.PutRequest.Body.Init}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ObjectID;
      reader.readMessage(value,refs_types_pb.ObjectID.deserializeBinaryFromReader);
      msg.setObjectId(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    case 3:
      var value = new object_types_pb.Header;
      reader.readMessage(value,object_types_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCopiesNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.PutRequest.Body.Init.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.PutRequest.Body.Init} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ObjectID.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      object_types_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getCopiesNumber();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional neo.fs.v2.refs.ObjectID object_id = 1;
 * @return {?proto.neo.fs.v2.refs.ObjectID}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.getObjectId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ObjectID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ObjectID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ObjectID|undefined} value */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.setObjectId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.clearObjectId = function() {
  this.setObjectId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.hasObjectId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Header header = 3;
 * @return {?proto.neo.fs.v2.object.Header}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.getHeader = function() {
  return /** @type{?proto.neo.fs.v2.object.Header} */ (
    jspb.Message.getWrapperField(this, object_types_pb.Header, 3));
};


/** @param {?proto.neo.fs.v2.object.Header|undefined} value */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 copies_number = 4;
 * @return {number}
 */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.getCopiesNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.neo.fs.v2.object.PutRequest.Body.Init.prototype.setCopiesNumber = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Init init = 1;
 * @return {?proto.neo.fs.v2.object.PutRequest.Body.Init}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.getInit = function() {
  return /** @type{?proto.neo.fs.v2.object.PutRequest.Body.Init} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.PutRequest.Body.Init, 1));
};


/** @param {?proto.neo.fs.v2.object.PutRequest.Body.Init|undefined} value */
proto.neo.fs.v2.object.PutRequest.Body.prototype.setInit = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.neo.fs.v2.object.PutRequest.Body.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.clearInit = function() {
  this.setInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.hasInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes chunk = 2;
 * @return {!(string|Uint8Array)}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.getChunk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes chunk = 2;
 * This is a type-conversion wrapper around `getChunk()`
 * @return {string}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.getChunk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChunk()));
};


/**
 * optional bytes chunk = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChunk()`
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.getChunk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChunk()));
};


/** @param {!(string|Uint8Array)} value */
proto.neo.fs.v2.object.PutRequest.Body.prototype.setChunk = function(value) {
  jspb.Message.setOneofField(this, 2, proto.neo.fs.v2.object.PutRequest.Body.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.clearChunk = function() {
  jspb.Message.setOneofField(this, 2, proto.neo.fs.v2.object.PutRequest.Body.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.Body.prototype.hasChunk = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.PutRequest.Body}
 */
proto.neo.fs.v2.object.PutRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.PutRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.PutRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.PutRequest.Body|undefined} value */
proto.neo.fs.v2.object.PutRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.object.PutRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.object.PutRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.object.PutRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.object.PutRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.PutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.PutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.PutResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.PutResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.PutResponse}
 */
proto.neo.fs.v2.object.PutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.PutResponse;
  return proto.neo.fs.v2.object.PutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.PutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.PutResponse}
 */
proto.neo.fs.v2.object.PutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.PutResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.PutResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.PutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.PutResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.PutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.PutResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.PutResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.PutResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.PutResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectId: (f = msg.getObjectId()) && refs_types_pb.ObjectID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.PutResponse.Body}
 */
proto.neo.fs.v2.object.PutResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.PutResponse.Body;
  return proto.neo.fs.v2.object.PutResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.PutResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.PutResponse.Body}
 */
proto.neo.fs.v2.object.PutResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ObjectID;
      reader.readMessage(value,refs_types_pb.ObjectID.deserializeBinaryFromReader);
      msg.setObjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.PutResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.PutResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.PutResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.PutResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ObjectID.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.ObjectID object_id = 1;
 * @return {?proto.neo.fs.v2.refs.ObjectID}
 */
proto.neo.fs.v2.object.PutResponse.Body.prototype.getObjectId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ObjectID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ObjectID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ObjectID|undefined} value */
proto.neo.fs.v2.object.PutResponse.Body.prototype.setObjectId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutResponse.Body.prototype.clearObjectId = function() {
  this.setObjectId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutResponse.Body.prototype.hasObjectId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.PutResponse.Body}
 */
proto.neo.fs.v2.object.PutResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.PutResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.PutResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.PutResponse.Body|undefined} value */
proto.neo.fs.v2.object.PutResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.object.PutResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.object.PutResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.object.PutResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.object.PutResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.PutResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.PutResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.DeleteRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.DeleteRequest}
 */
proto.neo.fs.v2.object.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.DeleteRequest;
  return proto.neo.fs.v2.object.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.DeleteRequest}
 */
proto.neo.fs.v2.object.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.DeleteRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.DeleteRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.DeleteRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.DeleteRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.DeleteRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.DeleteRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && refs_types_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.DeleteRequest.Body}
 */
proto.neo.fs.v2.object.DeleteRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.DeleteRequest.Body;
  return proto.neo.fs.v2.object.DeleteRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.DeleteRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.DeleteRequest.Body}
 */
proto.neo.fs.v2.object.DeleteRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.Address;
      reader.readMessage(value,refs_types_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.DeleteRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.DeleteRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.DeleteRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.Address address = 1;
 * @return {?proto.neo.fs.v2.refs.Address}
 */
proto.neo.fs.v2.object.DeleteRequest.Body.prototype.getAddress = function() {
  return /** @type{?proto.neo.fs.v2.refs.Address} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Address, 1));
};


/** @param {?proto.neo.fs.v2.refs.Address|undefined} value */
proto.neo.fs.v2.object.DeleteRequest.Body.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteRequest.Body.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteRequest.Body.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.DeleteRequest.Body}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.DeleteRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.DeleteRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.DeleteRequest.Body|undefined} value */
proto.neo.fs.v2.object.DeleteRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.object.DeleteRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.object.DeleteRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.DeleteResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.DeleteResponse}
 */
proto.neo.fs.v2.object.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.DeleteResponse;
  return proto.neo.fs.v2.object.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.DeleteResponse}
 */
proto.neo.fs.v2.object.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.DeleteResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.DeleteResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.DeleteResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.DeleteResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.DeleteResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.DeleteResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    tombstone: (f = msg.getTombstone()) && refs_types_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.DeleteResponse.Body}
 */
proto.neo.fs.v2.object.DeleteResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.DeleteResponse.Body;
  return proto.neo.fs.v2.object.DeleteResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.DeleteResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.DeleteResponse.Body}
 */
proto.neo.fs.v2.object.DeleteResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.Address;
      reader.readMessage(value,refs_types_pb.Address.deserializeBinaryFromReader);
      msg.setTombstone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.DeleteResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.DeleteResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.DeleteResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.DeleteResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTombstone();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional neo.fs.v2.refs.Address tombstone = 1;
 * @return {?proto.neo.fs.v2.refs.Address}
 */
proto.neo.fs.v2.object.DeleteResponse.Body.prototype.getTombstone = function() {
  return /** @type{?proto.neo.fs.v2.refs.Address} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Address, 1));
};


/** @param {?proto.neo.fs.v2.refs.Address|undefined} value */
proto.neo.fs.v2.object.DeleteResponse.Body.prototype.setTombstone = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteResponse.Body.prototype.clearTombstone = function() {
  this.setTombstone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteResponse.Body.prototype.hasTombstone = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.DeleteResponse.Body}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.DeleteResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.DeleteResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.DeleteResponse.Body|undefined} value */
proto.neo.fs.v2.object.DeleteResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.object.DeleteResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.object.DeleteResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.DeleteResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.HeadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.HeadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.HeadRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.HeadRequest}
 */
proto.neo.fs.v2.object.HeadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.HeadRequest;
  return proto.neo.fs.v2.object.HeadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.HeadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.HeadRequest}
 */
proto.neo.fs.v2.object.HeadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.HeadRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.HeadRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.HeadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.HeadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.HeadRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.HeadRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.HeadRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && refs_types_pb.Address.toObject(includeInstance, f),
    mainOnly: jspb.Message.getFieldWithDefault(msg, 2, false),
    raw: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.HeadRequest.Body}
 */
proto.neo.fs.v2.object.HeadRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.HeadRequest.Body;
  return proto.neo.fs.v2.object.HeadRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.HeadRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.HeadRequest.Body}
 */
proto.neo.fs.v2.object.HeadRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.Address;
      reader.readMessage(value,refs_types_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMainOnly(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.HeadRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.HeadRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getMainOnly();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getRaw();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional neo.fs.v2.refs.Address address = 1;
 * @return {?proto.neo.fs.v2.refs.Address}
 */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.getAddress = function() {
  return /** @type{?proto.neo.fs.v2.refs.Address} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Address, 1));
};


/** @param {?proto.neo.fs.v2.refs.Address|undefined} value */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool main_only = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.getMainOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.setMainOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool raw = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.getRaw = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.neo.fs.v2.object.HeadRequest.Body.prototype.setRaw = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.HeadRequest.Body}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.HeadRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.HeadRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.HeadRequest.Body|undefined} value */
proto.neo.fs.v2.object.HeadRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.object.HeadRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.object.HeadRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.HeaderWithSignature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.HeaderWithSignature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeaderWithSignature.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && object_types_pb.Header.toObject(includeInstance, f),
    signature: (f = msg.getSignature()) && refs_types_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.HeaderWithSignature}
 */
proto.neo.fs.v2.object.HeaderWithSignature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.HeaderWithSignature;
  return proto.neo.fs.v2.object.HeaderWithSignature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.HeaderWithSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.HeaderWithSignature}
 */
proto.neo.fs.v2.object.HeaderWithSignature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new object_types_pb.Header;
      reader.readMessage(value,object_types_pb.Header.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new refs_types_pb.Signature;
      reader.readMessage(value,refs_types_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.HeaderWithSignature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.HeaderWithSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeaderWithSignature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      object_types_pb.Header.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      refs_types_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional Header header = 1;
 * @return {?proto.neo.fs.v2.object.Header}
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.getHeader = function() {
  return /** @type{?proto.neo.fs.v2.object.Header} */ (
    jspb.Message.getWrapperField(this, object_types_pb.Header, 1));
};


/** @param {?proto.neo.fs.v2.object.Header|undefined} value */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.setHeader = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.refs.Signature signature = 2;
 * @return {?proto.neo.fs.v2.refs.Signature}
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.getSignature = function() {
  return /** @type{?proto.neo.fs.v2.refs.Signature} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Signature, 2));
};


/** @param {?proto.neo.fs.v2.refs.Signature|undefined} value */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.setSignature = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.clearSignature = function() {
  this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeaderWithSignature.prototype.hasSignature = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.HeadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.HeadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.HeadResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.HeadResponse}
 */
proto.neo.fs.v2.object.HeadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.HeadResponse;
  return proto.neo.fs.v2.object.HeadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.HeadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.HeadResponse}
 */
proto.neo.fs.v2.object.HeadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.HeadResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.HeadResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.HeadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.HeadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.HeadResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.neo.fs.v2.object.HeadResponse.Body.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.neo.fs.v2.object.HeadResponse.Body.HeadCase = {
  HEAD_NOT_SET: 0,
  HEADER: 1,
  SHORT_HEADER: 2,
  SPLIT_INFO: 3
};

/**
 * @return {proto.neo.fs.v2.object.HeadResponse.Body.HeadCase}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.getHeadCase = function() {
  return /** @type {proto.neo.fs.v2.object.HeadResponse.Body.HeadCase} */(jspb.Message.computeOneofCase(this, proto.neo.fs.v2.object.HeadResponse.Body.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.HeadResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.HeadResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && proto.neo.fs.v2.object.HeaderWithSignature.toObject(includeInstance, f),
    shortHeader: (f = msg.getShortHeader()) && object_types_pb.ShortHeader.toObject(includeInstance, f),
    splitInfo: (f = msg.getSplitInfo()) && object_types_pb.SplitInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.HeadResponse.Body}
 */
proto.neo.fs.v2.object.HeadResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.HeadResponse.Body;
  return proto.neo.fs.v2.object.HeadResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.HeadResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.HeadResponse.Body}
 */
proto.neo.fs.v2.object.HeadResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.HeaderWithSignature;
      reader.readMessage(value,proto.neo.fs.v2.object.HeaderWithSignature.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new object_types_pb.ShortHeader;
      reader.readMessage(value,object_types_pb.ShortHeader.deserializeBinaryFromReader);
      msg.setShortHeader(value);
      break;
    case 3:
      var value = new object_types_pb.SplitInfo;
      reader.readMessage(value,object_types_pb.SplitInfo.deserializeBinaryFromReader);
      msg.setSplitInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.HeadResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.HeadResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.HeadResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.HeaderWithSignature.serializeBinaryToWriter
    );
  }
  f = message.getShortHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      object_types_pb.ShortHeader.serializeBinaryToWriter
    );
  }
  f = message.getSplitInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      object_types_pb.SplitInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional HeaderWithSignature header = 1;
 * @return {?proto.neo.fs.v2.object.HeaderWithSignature}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.getHeader = function() {
  return /** @type{?proto.neo.fs.v2.object.HeaderWithSignature} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.HeaderWithSignature, 1));
};


/** @param {?proto.neo.fs.v2.object.HeaderWithSignature|undefined} value */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.setHeader = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.neo.fs.v2.object.HeadResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.clearHeader = function() {
  this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ShortHeader short_header = 2;
 * @return {?proto.neo.fs.v2.object.ShortHeader}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.getShortHeader = function() {
  return /** @type{?proto.neo.fs.v2.object.ShortHeader} */ (
    jspb.Message.getWrapperField(this, object_types_pb.ShortHeader, 2));
};


/** @param {?proto.neo.fs.v2.object.ShortHeader|undefined} value */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.setShortHeader = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.neo.fs.v2.object.HeadResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.clearShortHeader = function() {
  this.setShortHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.hasShortHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SplitInfo split_info = 3;
 * @return {?proto.neo.fs.v2.object.SplitInfo}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.getSplitInfo = function() {
  return /** @type{?proto.neo.fs.v2.object.SplitInfo} */ (
    jspb.Message.getWrapperField(this, object_types_pb.SplitInfo, 3));
};


/** @param {?proto.neo.fs.v2.object.SplitInfo|undefined} value */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.setSplitInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.neo.fs.v2.object.HeadResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.clearSplitInfo = function() {
  this.setSplitInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadResponse.Body.prototype.hasSplitInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.HeadResponse.Body}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.HeadResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.HeadResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.HeadResponse.Body|undefined} value */
proto.neo.fs.v2.object.HeadResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.object.HeadResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.object.HeadResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.HeadResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.HeadResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.SearchRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.SearchRequest}
 */
proto.neo.fs.v2.object.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.SearchRequest;
  return proto.neo.fs.v2.object.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.SearchRequest}
 */
proto.neo.fs.v2.object.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.SearchRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.SearchRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.SearchRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.neo.fs.v2.object.SearchRequest.Body.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.SearchRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.SearchRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    containerId: (f = msg.getContainerId()) && refs_types_pb.ContainerID.toObject(includeInstance, f),
    version: jspb.Message.getFieldWithDefault(msg, 2, 0),
    filtersList: jspb.Message.toObjectList(msg.getFiltersList(),
    proto.neo.fs.v2.object.SearchRequest.Body.Filter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.SearchRequest.Body}
 */
proto.neo.fs.v2.object.SearchRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.SearchRequest.Body;
  return proto.neo.fs.v2.object.SearchRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.SearchRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.SearchRequest.Body}
 */
proto.neo.fs.v2.object.SearchRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ContainerID;
      reader.readMessage(value,refs_types_pb.ContainerID.deserializeBinaryFromReader);
      msg.setContainerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 3:
      var value = new proto.neo.fs.v2.object.SearchRequest.Body.Filter;
      reader.readMessage(value,proto.neo.fs.v2.object.SearchRequest.Body.Filter.deserializeBinaryFromReader);
      msg.addFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.SearchRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.SearchRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContainerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.ContainerID.serializeBinaryToWriter
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.neo.fs.v2.object.SearchRequest.Body.Filter.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.SearchRequest.Body.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.SearchRequest.Body.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    key: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.SearchRequest.Body.Filter}
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.SearchRequest.Body.Filter;
  return proto.neo.fs.v2.object.SearchRequest.Body.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.SearchRequest.Body.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.SearchRequest.Body.Filter}
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.neo.fs.v2.object.MatchType} */ (reader.readEnum());
      msg.setMatchType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.SearchRequest.Body.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.SearchRequest.Body.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional MatchType match_type = 1;
 * @return {!proto.neo.fs.v2.object.MatchType}
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.getMatchType = function() {
  return /** @type {!proto.neo.fs.v2.object.MatchType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.neo.fs.v2.object.MatchType} value */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.setMatchType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string key = 2;
 * @return {string}
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.neo.fs.v2.object.SearchRequest.Body.Filter.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional neo.fs.v2.refs.ContainerID container_id = 1;
 * @return {?proto.neo.fs.v2.refs.ContainerID}
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.getContainerId = function() {
  return /** @type{?proto.neo.fs.v2.refs.ContainerID} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.ContainerID, 1));
};


/** @param {?proto.neo.fs.v2.refs.ContainerID|undefined} value */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.setContainerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.clearContainerId = function() {
  this.setContainerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.hasContainerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 version = 2;
 * @return {number}
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Filter filters = 3;
 * @return {!Array<!proto.neo.fs.v2.object.SearchRequest.Body.Filter>}
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.getFiltersList = function() {
  return /** @type{!Array<!proto.neo.fs.v2.object.SearchRequest.Body.Filter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.neo.fs.v2.object.SearchRequest.Body.Filter, 3));
};


/** @param {!Array<!proto.neo.fs.v2.object.SearchRequest.Body.Filter>} value */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.setFiltersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.neo.fs.v2.object.SearchRequest.Body.Filter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.neo.fs.v2.object.SearchRequest.Body.Filter}
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.addFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.neo.fs.v2.object.SearchRequest.Body.Filter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neo.fs.v2.object.SearchRequest.Body.prototype.clearFiltersList = function() {
  this.setFiltersList([]);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.SearchRequest.Body}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.SearchRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.SearchRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.SearchRequest.Body|undefined} value */
proto.neo.fs.v2.object.SearchRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.SearchRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.object.SearchRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.SearchRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.object.SearchRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.SearchRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.SearchRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.SearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.SearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.SearchResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.SearchResponse}
 */
proto.neo.fs.v2.object.SearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.SearchResponse;
  return proto.neo.fs.v2.object.SearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.SearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.SearchResponse}
 */
proto.neo.fs.v2.object.SearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.SearchResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.SearchResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.SearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.SearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.SearchResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.neo.fs.v2.object.SearchResponse.Body.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.SearchResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.SearchResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.SearchResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    idListList: jspb.Message.toObjectList(msg.getIdListList(),
    refs_types_pb.ObjectID.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.SearchResponse.Body}
 */
proto.neo.fs.v2.object.SearchResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.SearchResponse.Body;
  return proto.neo.fs.v2.object.SearchResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.SearchResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.SearchResponse.Body}
 */
proto.neo.fs.v2.object.SearchResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.ObjectID;
      reader.readMessage(value,refs_types_pb.ObjectID.deserializeBinaryFromReader);
      msg.addIdList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.SearchResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.SearchResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.SearchResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.SearchResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      refs_types_pb.ObjectID.serializeBinaryToWriter
    );
  }
};


/**
 * repeated neo.fs.v2.refs.ObjectID id_list = 1;
 * @return {!Array<!proto.neo.fs.v2.refs.ObjectID>}
 */
proto.neo.fs.v2.object.SearchResponse.Body.prototype.getIdListList = function() {
  return /** @type{!Array<!proto.neo.fs.v2.refs.ObjectID>} */ (
    jspb.Message.getRepeatedWrapperField(this, refs_types_pb.ObjectID, 1));
};


/** @param {!Array<!proto.neo.fs.v2.refs.ObjectID>} value */
proto.neo.fs.v2.object.SearchResponse.Body.prototype.setIdListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.neo.fs.v2.refs.ObjectID=} opt_value
 * @param {number=} opt_index
 * @return {!proto.neo.fs.v2.refs.ObjectID}
 */
proto.neo.fs.v2.object.SearchResponse.Body.prototype.addIdList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.neo.fs.v2.refs.ObjectID, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neo.fs.v2.object.SearchResponse.Body.prototype.clearIdListList = function() {
  this.setIdListList([]);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.SearchResponse.Body}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.SearchResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.SearchResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.SearchResponse.Body|undefined} value */
proto.neo.fs.v2.object.SearchResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.SearchResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.object.SearchResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.SearchResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.object.SearchResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.SearchResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.SearchResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    length: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.Range}
 */
proto.neo.fs.v2.object.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.Range;
  return proto.neo.fs.v2.object.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.Range}
 */
proto.neo.fs.v2.object.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.neo.fs.v2.object.Range.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.neo.fs.v2.object.Range.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 length = 2;
 * @return {number}
 */
proto.neo.fs.v2.object.Range.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.neo.fs.v2.object.Range.prototype.setLength = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.GetRangeRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeRequest}
 */
proto.neo.fs.v2.object.GetRangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeRequest;
  return proto.neo.fs.v2.object.GetRangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeRequest}
 */
proto.neo.fs.v2.object.GetRangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.GetRangeRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.GetRangeRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.GetRangeRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && refs_types_pb.Address.toObject(includeInstance, f),
    range: (f = msg.getRange()) && proto.neo.fs.v2.object.Range.toObject(includeInstance, f),
    raw: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeRequest.Body}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeRequest.Body;
  return proto.neo.fs.v2.object.GetRangeRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeRequest.Body}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.Address;
      reader.readMessage(value,refs_types_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = new proto.neo.fs.v2.object.Range;
      reader.readMessage(value,proto.neo.fs.v2.object.Range.deserializeBinaryFromReader);
      msg.setRange(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRaw(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getRange();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.neo.fs.v2.object.Range.serializeBinaryToWriter
    );
  }
  f = message.getRaw();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional neo.fs.v2.refs.Address address = 1;
 * @return {?proto.neo.fs.v2.refs.Address}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.getAddress = function() {
  return /** @type{?proto.neo.fs.v2.refs.Address} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Address, 1));
};


/** @param {?proto.neo.fs.v2.refs.Address|undefined} value */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Range range = 2;
 * @return {?proto.neo.fs.v2.object.Range}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.getRange = function() {
  return /** @type{?proto.neo.fs.v2.object.Range} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.Range, 2));
};


/** @param {?proto.neo.fs.v2.object.Range|undefined} value */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.setRange = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.clearRange = function() {
  this.setRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.hasRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool raw = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.getRaw = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.neo.fs.v2.object.GetRangeRequest.Body.prototype.setRaw = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.GetRangeRequest.Body}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.GetRangeRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.GetRangeRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.GetRangeRequest.Body|undefined} value */
proto.neo.fs.v2.object.GetRangeRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.GetRangeResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeResponse}
 */
proto.neo.fs.v2.object.GetRangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeResponse;
  return proto.neo.fs.v2.object.GetRangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeResponse}
 */
proto.neo.fs.v2.object.GetRangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.GetRangeResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.GetRangeResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.GetRangeResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.RangePartCase = {
  RANGE_PART_NOT_SET: 0,
  CHUNK: 1,
  SPLIT_INFO: 2
};

/**
 * @return {proto.neo.fs.v2.object.GetRangeResponse.Body.RangePartCase}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.getRangePartCase = function() {
  return /** @type {proto.neo.fs.v2.object.GetRangeResponse.Body.RangePartCase} */(jspb.Message.computeOneofCase(this, proto.neo.fs.v2.object.GetRangeResponse.Body.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    chunk: msg.getChunk_asB64(),
    splitInfo: (f = msg.getSplitInfo()) && object_types_pb.SplitInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeResponse.Body}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeResponse.Body;
  return proto.neo.fs.v2.object.GetRangeResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeResponse.Body}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setChunk(value);
      break;
    case 2:
      var value = new object_types_pb.SplitInfo;
      reader.readMessage(value,object_types_pb.SplitInfo.deserializeBinaryFromReader);
      msg.setSplitInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSplitInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      object_types_pb.SplitInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes chunk = 1;
 * @return {!(string|Uint8Array)}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.getChunk = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes chunk = 1;
 * This is a type-conversion wrapper around `getChunk()`
 * @return {string}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.getChunk_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getChunk()));
};


/**
 * optional bytes chunk = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getChunk()`
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.getChunk_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getChunk()));
};


/** @param {!(string|Uint8Array)} value */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.setChunk = function(value) {
  jspb.Message.setOneofField(this, 1, proto.neo.fs.v2.object.GetRangeResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.clearChunk = function() {
  jspb.Message.setOneofField(this, 1, proto.neo.fs.v2.object.GetRangeResponse.Body.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.hasChunk = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SplitInfo split_info = 2;
 * @return {?proto.neo.fs.v2.object.SplitInfo}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.getSplitInfo = function() {
  return /** @type{?proto.neo.fs.v2.object.SplitInfo} */ (
    jspb.Message.getWrapperField(this, object_types_pb.SplitInfo, 2));
};


/** @param {?proto.neo.fs.v2.object.SplitInfo|undefined} value */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.setSplitInfo = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.neo.fs.v2.object.GetRangeResponse.Body.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.clearSplitInfo = function() {
  this.setSplitInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeResponse.Body.prototype.hasSplitInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.GetRangeResponse.Body}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.GetRangeResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.GetRangeResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.GetRangeResponse.Body|undefined} value */
proto.neo.fs.v2.object.GetRangeResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeHashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeHashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.GetRangeHashRequest.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.RequestMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.RequestVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeHashRequest}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeHashRequest;
  return proto.neo.fs.v2.object.GetRangeHashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeHashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeHashRequest}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.GetRangeHashRequest.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.GetRangeHashRequest.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.RequestMetaHeader;
      reader.readMessage(value,session_types_pb.RequestMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.RequestVerificationHeader;
      reader.readMessage(value,session_types_pb.RequestVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeHashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeHashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.GetRangeHashRequest.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.RequestMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.RequestVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeHashRequest.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeHashRequest.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: (f = msg.getAddress()) && refs_types_pb.Address.toObject(includeInstance, f),
    rangesList: jspb.Message.toObjectList(msg.getRangesList(),
    proto.neo.fs.v2.object.Range.toObject, includeInstance),
    salt: msg.getSalt_asB64(),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeHashRequest.Body}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeHashRequest.Body;
  return proto.neo.fs.v2.object.GetRangeHashRequest.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeHashRequest.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeHashRequest.Body}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new refs_types_pb.Address;
      reader.readMessage(value,refs_types_pb.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 2:
      var value = new proto.neo.fs.v2.object.Range;
      reader.readMessage(value,proto.neo.fs.v2.object.Range.deserializeBinaryFromReader);
      msg.addRanges(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSalt(value);
      break;
    case 4:
      var value = /** @type {!proto.neo.fs.v2.refs.ChecksumType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeHashRequest.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeHashRequest.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      refs_types_pb.Address.serializeBinaryToWriter
    );
  }
  f = message.getRangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.neo.fs.v2.object.Range.serializeBinaryToWriter
    );
  }
  f = message.getSalt_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional neo.fs.v2.refs.Address address = 1;
 * @return {?proto.neo.fs.v2.refs.Address}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.getAddress = function() {
  return /** @type{?proto.neo.fs.v2.refs.Address} */ (
    jspb.Message.getWrapperField(this, refs_types_pb.Address, 1));
};


/** @param {?proto.neo.fs.v2.refs.Address|undefined} value */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Range ranges = 2;
 * @return {!Array<!proto.neo.fs.v2.object.Range>}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.getRangesList = function() {
  return /** @type{!Array<!proto.neo.fs.v2.object.Range>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.neo.fs.v2.object.Range, 2));
};


/** @param {!Array<!proto.neo.fs.v2.object.Range>} value */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.setRangesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.neo.fs.v2.object.Range=} opt_value
 * @param {number=} opt_index
 * @return {!proto.neo.fs.v2.object.Range}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.addRanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.neo.fs.v2.object.Range, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.clearRangesList = function() {
  this.setRangesList([]);
};


/**
 * optional bytes salt = 3;
 * @return {!(string|Uint8Array)}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.getSalt = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes salt = 3;
 * This is a type-conversion wrapper around `getSalt()`
 * @return {string}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.getSalt_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSalt()));
};


/**
 * optional bytes salt = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSalt()`
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.getSalt_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSalt()));
};


/** @param {!(string|Uint8Array)} value */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.setSalt = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional neo.fs.v2.refs.ChecksumType type = 4;
 * @return {!proto.neo.fs.v2.refs.ChecksumType}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.getType = function() {
  return /** @type {!proto.neo.fs.v2.refs.ChecksumType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.neo.fs.v2.refs.ChecksumType} value */
proto.neo.fs.v2.object.GetRangeHashRequest.Body.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.GetRangeHashRequest.Body}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.GetRangeHashRequest.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.GetRangeHashRequest.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.GetRangeHashRequest.Body|undefined} value */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.RequestMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.RequestMetaHeader}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.RequestMetaHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.RequestVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.RequestVerificationHeader}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.RequestVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.RequestVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.RequestVerificationHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeHashRequest.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeHashResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeHashResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.neo.fs.v2.object.GetRangeHashResponse.Body.toObject(includeInstance, f),
    metaHeader: (f = msg.getMetaHeader()) && session_types_pb.ResponseMetaHeader.toObject(includeInstance, f),
    verifyHeader: (f = msg.getVerifyHeader()) && session_types_pb.ResponseVerificationHeader.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeHashResponse}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeHashResponse;
  return proto.neo.fs.v2.object.GetRangeHashResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeHashResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeHashResponse}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.neo.fs.v2.object.GetRangeHashResponse.Body;
      reader.readMessage(value,proto.neo.fs.v2.object.GetRangeHashResponse.Body.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new session_types_pb.ResponseMetaHeader;
      reader.readMessage(value,session_types_pb.ResponseMetaHeader.deserializeBinaryFromReader);
      msg.setMetaHeader(value);
      break;
    case 3:
      var value = new session_types_pb.ResponseVerificationHeader;
      reader.readMessage(value,session_types_pb.ResponseVerificationHeader.deserializeBinaryFromReader);
      msg.setVerifyHeader(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeHashResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeHashResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.neo.fs.v2.object.GetRangeHashResponse.Body.serializeBinaryToWriter
    );
  }
  f = message.getMetaHeader();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      session_types_pb.ResponseMetaHeader.serializeBinaryToWriter
    );
  }
  f = message.getVerifyHeader();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      session_types_pb.ResponseVerificationHeader.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.toObject = function(opt_includeInstance) {
  return proto.neo.fs.v2.object.GetRangeHashResponse.Body.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neo.fs.v2.object.GetRangeHashResponse.Body} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hashListList: msg.getHashListList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neo.fs.v2.object.GetRangeHashResponse.Body}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neo.fs.v2.object.GetRangeHashResponse.Body;
  return proto.neo.fs.v2.object.GetRangeHashResponse.Body.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neo.fs.v2.object.GetRangeHashResponse.Body} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neo.fs.v2.object.GetRangeHashResponse.Body}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.neo.fs.v2.refs.ChecksumType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addHashList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neo.fs.v2.object.GetRangeHashResponse.Body.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neo.fs.v2.object.GetRangeHashResponse.Body} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getHashListList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional neo.fs.v2.refs.ChecksumType type = 1;
 * @return {!proto.neo.fs.v2.refs.ChecksumType}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.getType = function() {
  return /** @type {!proto.neo.fs.v2.refs.ChecksumType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.neo.fs.v2.refs.ChecksumType} value */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated bytes hash_list = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.getHashListList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes hash_list = 2;
 * This is a type-conversion wrapper around `getHashListList()`
 * @return {!Array<string>}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.getHashListList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getHashListList()));
};


/**
 * repeated bytes hash_list = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashListList()`
 * @return {!Array<!Uint8Array>}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.getHashListList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getHashListList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.setHashListList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.addHashList = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neo.fs.v2.object.GetRangeHashResponse.Body.prototype.clearHashListList = function() {
  this.setHashListList([]);
};


/**
 * optional Body body = 1;
 * @return {?proto.neo.fs.v2.object.GetRangeHashResponse.Body}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.getBody = function() {
  return /** @type{?proto.neo.fs.v2.object.GetRangeHashResponse.Body} */ (
    jspb.Message.getWrapperField(this, proto.neo.fs.v2.object.GetRangeHashResponse.Body, 1));
};


/** @param {?proto.neo.fs.v2.object.GetRangeHashResponse.Body|undefined} value */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional neo.fs.v2.session.ResponseMetaHeader meta_header = 2;
 * @return {?proto.neo.fs.v2.session.ResponseMetaHeader}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.getMetaHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseMetaHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseMetaHeader, 2));
};


/** @param {?proto.neo.fs.v2.session.ResponseMetaHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.setMetaHeader = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.clearMetaHeader = function() {
  this.setMetaHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.hasMetaHeader = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional neo.fs.v2.session.ResponseVerificationHeader verify_header = 3;
 * @return {?proto.neo.fs.v2.session.ResponseVerificationHeader}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.getVerifyHeader = function() {
  return /** @type{?proto.neo.fs.v2.session.ResponseVerificationHeader} */ (
    jspb.Message.getWrapperField(this, session_types_pb.ResponseVerificationHeader, 3));
};


/** @param {?proto.neo.fs.v2.session.ResponseVerificationHeader|undefined} value */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.setVerifyHeader = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.clearVerifyHeader = function() {
  this.setVerifyHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.neo.fs.v2.object.GetRangeHashResponse.prototype.hasVerifyHeader = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.neo.fs.v2.object);
